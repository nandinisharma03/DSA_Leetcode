/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> postorderTraversal(TreeNode* root) {
        vector<int>result;
        if(!root) return result;
        stack<TreeNode*>st;
        TreeNode*lastvisited= NULL;
        TreeNode*current = root;
        while(!st.empty()||current){
            if(current){
                st.push(current);
                current=current->left;

            }
            else{
                TreeNode* node = st.top();
                if(node->right && lastvisited!=node->right){
                    current=node->right;
                }else{
                    result.push_back(node->val);
                    lastvisited=node;
                    st.pop();
                }
            }
        }
        return result;
    }
};
